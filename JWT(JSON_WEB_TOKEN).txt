JWT组成
	头部、载荷与签名

头部（header）：描述关于该JWT的最基本的信息，例如其类型以及签名所用的算法
	{"typ":"JWT","alg":"HS256"}
	在头部指明了签名算法是HS256算法,头部默认用base64编码

负载（payload）：存放有效信息的地方，包含三个部分
	1）标准中注册的声明（建议但不强制使用）
		iss: jwt签发者 
		sub: jwt所面向的用户 
		aud: 接收jwt的一方 
		exp: jwt的过期时间，这个过期时间必须要大于签发时间 
		nbf: 定义在什么时间之前，该jwt都是不可用的. 
		iat: jwt的签发时间 
		jti: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击。
	2）公共的声明
	3）私有的声明

签证（signature）：由三部分组成
	header（base64后的）
	payload（base64后的）
	secret

	这个部分需要base64加密后的header和base64加密后的payload使用 . 连接组成的字符
串，然后通过header中声明的加密方式进行加盐secret组合加密，然后就构成了jwt的第
三部分。

	secret是保存在服务器端的，jwt的签发生成也是在服务器端的，secret就是用
来进行jwt的签发和jwt的验证，所以，它就是你服务端的私钥，在任何场景都不应该流
露出去。一旦客户端得知这个secret, 那就意味着客户端是可以自我签发jwt了。

无状态！！！

可以将jwt令牌的salt和过期时间配置在配置文件中；超了token的过期时间，进行token解析会报错。

鉴权步骤
1.在用户登陆成功后，返回一个token（jwt),包含角色信息
2.用户进行删除、新增操作时，通过interceptor拦截器读取header头中的token信息，并将token的角色信息存入request（request.setAttribute)
3.在具体业务中，通过request中的角色信息进行鉴权。（request.getAttribute)

