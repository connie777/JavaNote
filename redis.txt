1.纯内存操作，性能出色，每秒可以处理超过10万次读写操作，是已知性能最快的key-value DB
2.支持保存多种数据结构，单个value的最大限制是1GB;memcached的值只能是字符串，value只能保存1MB
3.支持的数据类型：String、List、Hash、Set、ZSet
4.数据淘汰策略：
	1)volatile-lru 使用LRU(Least Recently Used,最近最少使用) 算法进行数据淘汰,淘汰使用时间最早且使用次数最少的key，只淘汰设定了有效期的key。
	2)allkeys-lru 使用LRU算法进行数据淘汰，可以淘汰所有key
	3)volatile-random:随机淘汰设定了过期时间的key
	4)allkeys-readom:随机淘汰key
	5)volatile-ttl:淘汰剩余有效期最短的key
	6)no-eviction:不驱逐数据
5.应用场景
	1）会话缓存
	2）队列
	3）排行榜/计数器
6.缓存穿透
	大量请求不存在的key，请求直接到了数据库
	避免：1）对查询结果为空的key也做缓存，并设置较短的过期时间，在插入数据后删除key
		2）对一定不存在的key进行过滤
7.缓存雪崩
	大量缓存集中在某个时间段失效，导致给后端系统带来很大压力，导致系统崩溃，缓存节点宕机导致请求直接到数据库
	避免：1）不同的key设置不同的过期时间，让缓存失效时间点尽量均匀
		2）加锁或队列保证不会有大量线程对数据库一次性进行读写

8.redis持久化
	1）RDB (Redis DataBase):在不同的时间点将redis的数据生成的快照同步到磁盘等介质上。内存到磁盘的快照，定期更新。缺点：耗时，耗性能，易丢失数据
	2）AOF（Append Only File）：将redis所执行过的所有指令都记录下来，在下次redis重启时，只需要执行指令就可以了；写日志。缺点：体积大，恢复速度慢。

