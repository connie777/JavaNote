2019/12/19 多云 Thursday

1.
//Integer的valueOf方法缓存-128~127
System.out.println(Integer.valueOf(1)==Integer.valueOf(1));//true
System.out.println(Integer.valueOf(128)==Integer.valueOf(128));//false

2.抽象类
抽象类不能用于创建实例，只能当做父类被其他子类继承，但是可以有构造器，在创建子类实例时被调用
抽象类可以有非抽象方法
一个类如果有抽象方法，必须定义成抽象类
一个普通类继承一个抽象类，必须将父类所有的抽象方法实现
abstract和static不能同时修饰方法，因为通过类名.方法名调用时，调用的是没有方法体的方法
抽象方法不能用private修饰，因为抽象方法需要子类实现

3.接口
接口中不能有构造器和初始化块
接口中的成员变量总是使用public static final 修饰
接口中的成员变量必须在定义时指定默认值
定义接口里的普通方法时不管是否使用public abstract 修饰符，接口里的普通方法总是使用public abstract 来修饰
接口完全支持多继承，即一个接口可以有多个直接父接口。与类不同
一个普通类实现了一个或多个接口之后，这个类必须完全实现这些接口里所定义的全部抽象方法

4.接口和抽象类
接口和抽象类都不能被实例化
接口和抽象类都可以包含抽象方法，实现接口或继承抽象类的普通子类都必须实现这些抽象方法

接口里只能包含抽象方法、静态方法、默认方法和私有方法（JDK1.8,1.9),不能为普通方法提供方法实现；抽象类则完全可以包含普通方法（抽象类体现了模板设计模式）。
接口里只能定义静态常量，不能定义普通成员变量；抽象类则既可以定义普通成员变量，也可以定义静态常量。
接口里不包含构造器和初始化代码块；抽象类则可以包含（用于子类调用）。
一个类最多只能有一个直接父类，包括抽象类；但一个类可以直接实现多个接口；一个接口可以继承多个接口（多个直接父级接口），不能继承抽象类

5.内部类  
内部类作为外部类的成员，可以使用任意访问控制符如private、protected、缺省和public修饰
外部类只能使用public、final、abstract、缺省（包访问控制符）  修饰

5.1非静态内部类
非静态内部类的成员可以访问外部类的private成员；外部类需要访问非静态内部类的成员，则必须显示创建非静态内部类对象来调用访问其实例成员。
非静态内部类里不能有静态方法、静态成员变量、静态初始化块

5.2静态内部类
